{"version":3,"sources":["components/MorseCodeTable.js","components/Translator.js","components/BinaryTranslator.js","components/Words.js","App.js","logo.svg","reportWebVitals.js","index.js"],"names":["styleButtons","borderRadius","MorseTable","props","mode","clickLetter","useState","codes","setCodes","useEffect","axios","get","then","res","data","catch","err","console","error","map","value","flex","title","code","shape","style","onClick","character","id","TextArea","Input","TransalatorComponent","message","setMessage","result","setResult","setMode","url","post","text","response","translate","autoSize","onChange","target","name","localeCompare","test","toUpperCase","icon","SwapOutlined","aux","human","morse","BASE_URL_API","BinaryTransalatorComponent","result1","setResult1","result2","setResult2","state","setstate","timeout","setTimeout","m","clearInterval","CaretRightFilled","PauseOutlined","disabled","AimOutlined","onMouseUp","onMouseDown","CloudUploadOutlined","columns","dataIndex","key","WordsTable","dataSource","setDataSource","results","Content","Layout","Header","Footer","TabPane","Tabs","App","padding","height","defaultActiveKey","centered","tab","textAlign","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ee9e6bd8.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport { Row, Col, Divider, Button, Tooltip } from 'antd';\nimport 'antd/dist/antd.css';\nconst styleButtons = {\n  borderRadius: 5,\n\n}\n\nexport const MorseTable = (props) => {\n  const { mode, clickLetter } = props;\n  const [codes, setCodes] = useState([])\n\n  const fetch_codes = () => {\n    axios.get('http://mauss-morse-decoder.herokuapp.com/api/get-codes/')\n      .then(res => {\n        setCodes(res.data)\n      })\n      .catch(err => console.error(err))\n  }\n  useEffect(() => {\n    fetch_codes()\n  }, [])\n\n\n  return (\n    <>\n      <Divider>Morse Codes</Divider>\n      <Row >\n        {codes.map((value) =>\n          <Col flex=\"1 1 20px \" key={value.id}>\n            <Tooltip title={value.code}>\n              <Button shape=\"round\" style={styleButtons}onClick={() => { clickLetter(value.character, value.code) }}>\n                {value.character}\n              </Button>\n            </Tooltip>\n          </Col>)\n        }\n      </Row>\n    </>\n\n  )\n}","import { Input, Divider, Row, Col, Tooltip, Button } from 'antd';\nimport axios from 'axios';\nimport { useState, useEffect } from \"react\";\nimport { SwapOutlined } from '@ant-design/icons'\nimport { MorseTable } from \"./MorseCodeTable\";\nconst { TextArea } = Input;\nconst BASE_URL_API = 'http://mauss-morse-decoder.herokuapp.com/api/'\n\nexport const TransalatorComponent = (props) => {\n\n  const [message, setMessage] = useState('')\n  const [result, setResult] = useState('')\n  const [mode, setMode] = useState(true)\n\n  const handleChange = ({ target: { value, name } }) => {\n    if (!name.localeCompare('message')) {\n      if ((mode & /^[.-\\s]*$/.test(value)) || (!mode & /^[0-9\\sA-Za-z]*$/.test(value))) {\n        setMessage(value.toUpperCase())\n      }\n    }\n  }\n\n  const translate = () => {\n    let url = BASE_URL_API;\n    url += mode ? 'translate/2human' : 'translate/2morse';\n    axios.post(url, { text: message })\n      .then(({ data: { code, response } }) => {\n        if (code === 200) {\n          setResult(response)\n        }\n      }).catch(console.error)\n  }\n  const addFromTable = (human, morse) => {\n    if (mode) {\n      let res = message + ' ' + morse\n      res += !morse.localeCompare(' ') ? ' ' : ''\n      setMessage(res)\n    } else {\n      setMessage(message + human)\n    }\n  }\n\n  const swapMode = () => {\n    setMode(!mode)\n    const aux = message\n    setMessage(result)\n    setResult(aux)\n  }\n\n  useEffect(() => {\n    translate()\n  }, [message])\n\n  return (\n    <>\n      <Row >\n        <Col flex=\"0 0 10px\" />\n        <Col flex=\"1 1 100px\">\n          <Divider>{mode ? 'From: Morse' : 'From: Human'}</Divider>\n          <TextArea autoSize\n            value={message}\n            onChange={handleChange}\n            key='1'\n            name='message'\n          ></TextArea>\n        </Col>\n        <Col flex=\"0 0 10px\">\n          <Tooltip title=\"Swap\">\n            <Button shape=\"circle\" icon={<SwapOutlined />}\n              onClick={swapMode} />\n          </Tooltip>\n        </Col>\n\n        <Col flex=\"1 1 100px\">\n          <Divider>{!mode ? 'To: Morse' : 'To: Human'}</Divider>\n          <TextArea autoSize\n            name='result'\n            key='2'\n            value={result}\n          ></TextArea>\n        </Col>\n        <Col flex=\"0 0 10px\" />\n      </Row>\n      <MorseTable mode={mode} clickLetter={addFromTable} />\n    </>\n  )\n}","import { Input, Divider, Row, Col, Tooltip, Button } from 'antd';\nimport axios from 'axios';\nimport { useState, useEffect } from \"react\";\nimport { AimOutlined, CaretRightFilled, CloudUploadOutlined, PauseOutlined, PlayCircleFilled, SwapOutlined } from '@ant-design/icons'\nimport { MorseTable } from \"./MorseCodeTable\";\nconst { TextArea } = Input;\nconst BASE_URL_API = 'http://mauss-morse-decoder.herokuapp.com/api/'\n\nexport const BinaryTransalatorComponent = (props) => {\n\n  let [message, setMessage] = useState('')\n  const [result1, setResult1] = useState('')\n  const [result2, setResult2] = useState('')\n  const [mode, setMode] = useState(true)\n  const [state, setstate] = useState(0)\n\n  const handleChange = ({ target: { value, name } }) => {\n    if (/^[01]*$/.test(value)) {\n      setMessage(value)\n    }\n\n  }\n\n  const translate = () => {\n    let url = BASE_URL_API + 'translate/bit2human';\n    axios.post(url, { text: message })\n      .then(({ data: { code, response } }) => {\n        if (code === 200) {\n          setResult1(response)\n        }\n      }).catch(console.error)\n    url = BASE_URL_API + 'translate/bit2morse';\n    axios.post(url, { text: message })\n      .then(({ data: { code, response } }) => {\n        if (code === 200) {\n          setResult2(response)\n        }\n      }).catch(console.error)\n  }\n\n  const ones = () => setTimeout(() => {\n    setMessage(m => m + '1')\n  }, 200);\n\n\n  const zeros = () => setTimeout(() => {\n\n    setMessage(m => m + '0')\n  }, 200);\n\n\n\n\n\n  useEffect(() => {\n    let timeout;\n    if (state === 1) {\n      timeout = zeros()\n    } else if (state === 2) {\n      timeout = ones()\n    }\n    return () => clearInterval(timeout);\n  })\n\n  return (\n    <>\n      <Row >\n        <Col flex=\"1 1 100px\">\n          <Divider>From: Binary</Divider>\n          <TextArea autoSize\n            value={message}\n            onChange={handleChange}\n            key='1'\n            name='message'\n          ></TextArea>\n        </Col>\n      </Row >\n      <Row >\n        <Col flex=\"1 1 100px\">\n          <Divider>To: Human</Divider>\n          <TextArea autoSize\n            name='result1'\n            key='result1'\n            value={result1}\n          ></TextArea>\n        </Col>\n      </Row>\n      <Row >\n        <Col flex=\"1 1 100px\">\n          <Divider>To: Morse</Divider>\n          <TextArea autoSize\n            name='result2'\n            key='result2'\n            value={result2}\n          ></TextArea>\n        </Col>\n      </Row>\n      <Row>\n        <Col flex=\"auto\" />\n        {state === 0 ?\n          <>\n            <Col flex=\"0 0 10px\">\n              <Tooltip title=\"Play\">\n                <Button shape=\"round\" icon={<CaretRightFilled />}\n                  onClick={() => { setstate(1) }} />\n              </Tooltip>\n            </Col>\n            <Col flex=\"0 0 10px\" />\n          </>\n\n          :\n          <>\n            <Col flex=\"0 0 10px\">\n              <Tooltip title=\"Stop\">\n                <Button shape=\"round\" icon={<PauseOutlined />}\n                  onClick={() => { setstate(0) }} />\n              </Tooltip>\n            </Col>\n            <Col flex=\"0 0 10px\" />\n          </>\n        }\n        <Col flex=\"0 0 10px\">\n          <Button shape=\"round\"\n            disabled={state === 0}\n            icon={<AimOutlined />}\n            onMouseUp={() => {\n              setstate(1)\n            }}\n            onMouseDown={() => {\n              setstate(2)\n            }}\n          />\n        </Col>\n        <Col flex=\"0 0 10px\" />\n        <Col flex=\"0 0 10px\">\n          <Tooltip title=\"Translate\">\n            <Button shape=\"round\" icon={<CloudUploadOutlined />}\n              onClick={translate} />\n          </Tooltip>\n        </Col>\n        <Col flex=\"auto\" />\n      </Row>\n\n    </>\n  )\n}\n","import axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport { Row, Col, Divider, Button, Tooltip,Table } from 'antd';\nimport 'antd/dist/antd.css';\nconst styleButtons = {\n  borderRadius: 5,\n\n}\n\nconst columns = [\n  {\n    title: 'ID',\n    dataIndex: 'id',\n    key: 'id',\n  },\n  {\n    title: 'Word',\n    dataIndex: 'word',\n    key: 'word',\n  },\n  {\n    title: 'Morse',\n    dataIndex: 'morse',\n    key: 'morse',\n  },\n  {\n    title: 'Frequency',\n    dataIndex: 'frequency',\n    key: 'frequency',\n  },\n]\n\n\nexport const WordsTable = (props) => {\n  const { mode, clickLetter } = props;\n  const [dataSource, setDataSource] = useState([])\n\n  const fetch_codes = () => {\n    axios.get('http://mauss-morse-decoder.herokuapp.com/api/get-words/')\n      .then(res => {\n        setDataSource(res.data.results)\n      })\n      .catch(err => console.error(err))\n    \n  }\n  useEffect(() => {\n    fetch_codes()\n  }, [])\n\n\n  return (\n    <>\n      <Divider>Morse Codes</Divider>\n      <Table dataSource={dataSource} columns={columns} />;\n    </>\n\n  )\n}","import { Layout, Menu, Breadcrumb, Tabs } from 'antd';\nimport { TransalatorComponent } from \"./components/Translator\";\nimport { BinaryTransalatorComponent } from './components/BinaryTranslator';\nimport { WordsTable } from './components/Words';\nimport logo from './logo.svg';\nimport './App.css';\nconst { Header, Content, Footer } = Layout;\n\nconst { TabPane } = Tabs;\nfunction App() {\n  return (\n    <Layout>\n      <Content style={{ padding: '0 50px', height: '100vh' }}>\n        <Tabs defaultActiveKey=\"1\" centered>\n          <TabPane tab=\"Morse/Human\" key=\"1\">\n            <TransalatorComponent />\n          </TabPane>\n          <TabPane tab=\"Binary\" key=\"2\">\n            <BinaryTransalatorComponent />\n          </TabPane>\n          <TabPane tab=\"Frequency Words Table\" key=\"3\">\n            <WordsTable />\n          </TabPane>\n        </Tabs>\n      </Content>\n      <Footer style={{ textAlign: 'center' }}>\n        Mauss ©2021 Created by Mauricio Aguilera\n      </Footer>\n    </Layout>\n  );\n}\n\nexport default App;","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}